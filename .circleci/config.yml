version: 2
jobs:
  build:
    working_directory: ~/workspace
    docker:
      - image: emojigen/docker-web-main
    environment:
      PYTHON_BIN: /usr/local/python/bin/python
      PIP_BIN: /usr/local/python/bin/pip
    steps:
      - checkout
      - run:
          name: System information
          command: |
            $PYTHON_BIN --version
            $PIP_BIN --version
            echo "Node $(node -v)"
            echo "Yarn v$(yarn --version)"
      - run:
          name: Notify test started
          command: |
            $PIP_BIN install -q slackweb
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              $PYTHON_BIN common/script/notify.py started
            fi
      - restore_cache:
          key: emoji-gen/web-main/{{ arch }}/{{ checksum "frontend/yarn.lock" }}/{{ checksum "server/requirements.txt" }}
      - run:
          name: Install dependencies (Python)
          command: |
            $PIP_BIN install -q -r requirements.txt \
              --index-url https://repo.fury.io/emoji-gen/ --extra-index-url https://pypi.org/simple
          working_directory: server
      - run:
          name: Install dependencies (Node)
          command: yarn
          working_directory: frontend
      - run:
          name: Test (Node)
          command: |
            yarn test
            yarn run build

            if [ $CIRCLE_BRANCH = 'master' ]; then
              common/script/is-git-dirty.sh
            fi
          working_directory: frontend
      - save_cache:
          key: emoji-gen/web-main/{{ arch }}/{{ checksum "yarn.lock" }}/{{ checksum "requirements.txt" }}
          paths:
            - ~/workspace/node_modules
            - ~/.cache/yarn/
            - ~/.cache/pip/
      - run:
          name: Notify test successful
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              $PYTHON_BIN script/notify.py successful
            fi
      - deploy:
          name: Deploy to Production
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              curl -X POST "https://circleci.com/api/v1.1/project/github/pine/eg-fabric/tree/master?circle-token=$CIRCLE_TOKEN"
            fi
